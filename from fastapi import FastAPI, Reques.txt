from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import requests
from datetime import datetime

app = FastAPI()

VALID_API_KEYS = {"abc123", "xyz789"}
RATE_LIMIT = 100
usage_log = {}

@app.middleware("http")
async def verify_key(request: Request, call_next):
    key = request.headers.get("x-api-key")
    if key not in VALID_API_KEYS:
        return JSONResponse(status_code=403, content={"error": "Missing or invalid API key."})

    now = datetime.utcnow()
    today = now.date()

    if key not in usage_log or usage_log[key]["date"] != today:
        usage_log[key] = {"count": 0, "date": today, "logs": []}

    if usage_log[key]["count"] >= RATE_LIMIT:
        return JSONResponse(status_code=429, content={"error": "Rate limit exceeded."})

    usage_log[key]["count"] += 1
    usage_log[key]["logs"].append({"path": str(request.url), "time": now.isoformat()})
    return await call_next(request)

@app.get("/convert")
def convert(from_currency: str, to_currency: str, amount: float):
    url = f"https://api.exchangerate.host/convert?from={from_currency}&to={to_currency}&amount={amount}"
    r = requests.get(url)
    data = r.json()
    return {
        "from": from_currency,
        "to": to_currency,
        "rate": data["info"]["rate"],
        "converted_amount": round(data["result"], 2)
    }
